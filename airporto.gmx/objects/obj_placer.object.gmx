<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///defaults

startposx = 0;
startposy = 0;

endposx = 0;
endposy = 0;

dir = 0;

mousedragging = false;
objectindrag = 0;

bricksplace = 0;

scancelposx = 0;
scancelposy = 0;
ecancelposx = 0;
ecancelposy = 0;

enablecancel = false;

globalvar scancelposx;
globalvar scancelposy;
globalvar ecancelposx;
globalvar ecancelposy;
globalvar enablecancel;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///snap placer
x = mouse_x
y = mouse_y
move_snap(32,32);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mousedragging
var mousedirection = point_direction(startposx,startposy,mouse_x,mouse_y);
    if (mousedirection &lt; 45 &amp;&amp; mousedirection &gt; 0) || (mousedirection &gt; 315 &amp;&amp; mousedirection &lt; 360) {
        dir = 1;
    }
    if mousedirection &lt;135 &amp;&amp; mousedirection &gt; 45 {
        dir = 2;
    }
    if mousedirection &lt; 225 &amp;&amp; mousedirection &gt; 135 {
        dir = 3;
    }
    if mousedirection &lt; 315 &amp;&amp; mousedirection &gt; 225 {
        dir = 4;
    }

if mousedragging {
    if dir == 1 {
        endposx = (mouse_x div 32)*32+16;
        endposy = startposy;
    } 
    if dir == 2{
            endposx = startposx;
            endposy = (mouse_y div 32)*32+16;
    } 
    if dir == 3 {
        endposx = (mouse_x div 32)*32+16;
        endposy = startposy;
    } 
    if dir == 4 {
        endposx = startposx;
        endposy = (mouse_y div 32)*32+16;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set placed bricks
bricksplace = point_distance(startposx,startposy,endposx,endposy)/32;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cancel



if mouse_check_button(mb_right) {
    ecancelposx = mouse_x;
    ecancelposy = mouse_y;
    enablecancel = true;
}

if mouse_check_button_released(mb_right) {
    enablecancel = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hudselector


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move camera

if keyboard_check(ord("W")) {
    view_yview[0] -= 5;
}

if keyboard_check(ord("S")) {
    view_yview[0] += 5;
}

if keyboard_check(ord("A")) {
    view_xview[0] -= 5;
}

if keyboard_check(ord("D")) {
    view_xview[0] += 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mousedragging = false;
var rdir = dir;

for(i=0;i&lt;bricksplace;i++) {
    if rdir == 1 {
        var instance = instance_create(startposx+i*32,startposy,obj_wall);
        instance.jobid = instance.id;
        instance.retype = 0;
        instance.requant = 1;
        ds_list_add(idlist,instance.id);
        ds_list_add(joblist,0); //0 = wall;
        ds_list_add(typelist,0); //0 = builder;
        ds_list_add(actionlist,0); //0 = build;
        ds_list_add(progresslist,0); //0 = queued; 1 = inprogress; 2 = finished;
        ds_list_add(resourcestypelist,0); 
        ds_list_add(resourcesquantlist,1); //quantity of resources required to build;
        global.wallamount++
    }
    if rdir == 2 {
        var instance = instance_create(startposx,startposy-i*32-32,obj_wall);
        instance.jobid = instance.id;
        instance.retype = 0;
        instance.requant = 1;
        ds_list_add(idlist,instance.id);
        ds_list_add(joblist,0); //0 = wall;
        ds_list_add(typelist,0); //0 = builder;
        ds_list_add(actionlist,0); //0 = build;
        ds_list_add(progresslist,0); //0 = queued; 1 = inprogress; 2 = finished;
        ds_list_add(resourcestypelist,0); 
        ds_list_add(resourcesquantlist,1); //quantity of resources required to build;
        global.wallamount++
    }
    if rdir == 3 {
        var instance = instance_create(startposx-i*32-32,startposy,obj_wall);
        instance.jobid = instance.id;
        instance.retype = 0;
        instance.requant = 1;
        ds_list_add(idlist,instance.id);
        ds_list_add(joblist,0); //0 = wall;
        ds_list_add(typelist,0); //0 = builder;
        ds_list_add(actionlist,0); //0 = build;
        ds_list_add(progresslist,0); //0 = queued; 1 = inprogress; 2 = finished;
        ds_list_add(resourcestypelist,0); 
        ds_list_add(resourcesquantlist,1); //quantity of resources required to build;
        global.wallamount++
    }
    if rdir == 4 {
        var instance = instance_create(startposx,startposy+i*32,obj_wall);
        instance.jobid = instance.id;
        instance.retype = 0;
        instance.requant = 1;
        ds_list_add(idlist,instance.id);
        ds_list_add(joblist,0); //0 = wall;
        ds_list_add(typelist,0); //0 = builder;
        ds_list_add(actionlist,0); //0 = build;
        ds_list_add(progresslist,0); //0 = queued; 1 = inprogress; 2 = finished;
        ds_list_add(resourcestypelist,0); 
        ds_list_add(resourcesquantlist,1); //quantity of resources required to build;
        global.wallamount++
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.wallamount--

scancelposx = mouse_x;
scancelposy = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var instance = instance_create(x,y,obj_wall);
instance.jobid = instance.id;
instance.retype = 0;
instance.requant = 1;
ds_list_add(idlist,instance.id);
ds_list_add(joblist,0); //0 = wall;
ds_list_add(typelist,0); //0 = builder;
ds_list_add(actionlist,0); //0 = build;
ds_list_add(progresslist,0); //0 = queued; 1 = inprogress; 2 = finished;
ds_list_add(resourcestypelist,0); 
/*
0 = stone;
1 = iron;
2 = steel;
3 = reinforcedsteel;

ds_list_add(resourcesquantlist,1); //quantity of resources required to build;
global.wallamount++

*/

startposx = (mouse_x div 32)*32+16;
startposy = (mouse_y div 32)*32+16;

mousedragging = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jobs

for (i=0;i&lt;ds_list_size(joblist);i++) {
    if i &lt; 10 {
        draw_text(0,16*i,string(ds_list_find_value(joblist,i)) + string(ds_list_find_value(typelist,i)) + string(ds_list_find_value(actionlist,i)) + string(ds_list_find_value(idlist,i)) + string(ds_list_find_value(progresslist,i)));
    }
}

draw_set_halign(fa_right);
for(i=0;i&lt;ds_list_size(allresourcestype);i++) {
    draw_text(1366,16*i,string(ds_list_find_value(allresourcestype,i)) + string(ds_list_find_value(allresourcesquant,i)));
}
draw_set_halign(fa_left);


draw_text(150,0,"Jobs: " + string(ds_list_size(joblist)));
draw_text(150,16,"In progress: " + string(ainprog));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hub
draw_set_alpha(0.5);
draw_rectangle_colour(0,768-48,1366,768,c_black,c_black,c_black,c_black,false);
draw_set_alpha(1);
draw_rectangle_colour(0,768-48,1366,768,c_white,c_white,c_white,c_white,true);
draw_sprite(spr_icons,0,48,768-16);
draw_sprite(spr_icons,1,128,768-16);
draw_sprite(spr_icons,3,208,768-16);
draw_sprite(spr_icons,3,288,768-16);
draw_sprite(spr_icons,3,368,768-16);
draw_sprite(spr_icons,3,448,768-16);
draw_sprite(spr_list,0,16,768-80-16)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button(mb_left) &amp;&amp; mouse_in_region(view_xview[0],view_yview[0],view_xview[0]+10,view_yview[0]+10) {
    draw_text(0,0,"click");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///buildlines
if mousedragging == true {

var pos = point_distance(startposx,startposy,endposx,endposy)/2
draw_line(startposx,startposy,endposx,endposy);

if dir == 1 {
        draw_line(startposx,startposy+10,startposx,startposy-10);
        draw_line(endposx,endposy+10,endposx,endposy-10);
        draw_text(startposx+pos,startposy,string(bricksplace));
}
if dir == 2 {
        draw_line(startposx-10,startposy,startposx+10,startposy);
        draw_line(endposx-10,endposy,endposx+10,endposy);
        draw_text(startposx,startposy-pos,string(bricksplace));
}
if dir == 3 {
        draw_line(startposx,startposy+10,startposx,startposy-10);
        draw_line(endposx,endposy+10,endposx,endposy-10);
        draw_text(startposx-pos,startposy,string(bricksplace));
}
if dir == 4 {
        draw_line(startposx-10,startposy,startposx+10,startposy);
        draw_line(endposx-10,endposy,endposx+10,endposy);
        draw_text(startposx,endposy-pos,string(bricksplace));
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mousedebugs

if global.debug {
    draw_text(mouse_x,mouse_y,string(mouse_x));
    draw_text(mouse_x,mouse_y+16,string(mouse_y));
    draw_text(mouse_x,mouse_y+32,string(point_direction(startposx,startposy,mouse_x,mouse_y)));
    draw_text(mouse_x,mouse_y+48,string(dir));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cancelrect

if enablecancel == true {
    draw_rectangle_colour(scancelposx,scancelposy,ecancelposx,ecancelposy,c_red,c_red,c_red,c_red,true);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///world boundrey

draw_line_width_colour(0,0,room_width,0,5,c_maroon,c_maroon);
draw_line_width_colour(0,0,0,room_height,5,c_maroon,c_maroon);
draw_line_width_colour(0,room_height,room_width,room_height,5,c_maroon,c_maroon);
draw_line_width_colour(room_width,0,room_width,room_height,5,c_maroon,c_maroon);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(mouse_x,mouse_y,obj_item);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(mouse_x,mouse_y,obj_character);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var roomwidth = get_string("Height",4);
var roomheight = get_string("Height",4);

var startx = x;
var starty = y;
for(i=0;i&lt;roomwidth;i++) {
        var instance = instance_create(startx+i*32,starty,obj_wall);
        instance.jobid = instance.id
        ds_list_add(idlist,instance.id);
        ds_list_add(joblist,"wall");
        ds_list_add(typelist,"worker");
        ds_list_add(actionlist,"build");
        ds_list_add(progresslist,"queued");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.debug = !global.debug;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
