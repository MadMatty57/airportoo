<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(ord("S")) &amp;&amp; keyboard_check(vk_lcontrol) {
    var savelocation = get_save_filename_ext("Game Save|*.sav","",working_directory,"Save your game");
    ini_open(savelocation);
    if instance_exists(obj_character) {
        for (i=0;i&lt;=instance_number(obj_character);i++) {
            var instancefind = instance_find(obj_character,i)
            ini_write_real("workerx",string(i),instancefind.x);
            ini_write_real("workery",string(i),instancefind.y);
            ini_write_real("workertype",string(i),instancefind.workertype);
        }
    }
    if instance_exists(obj_wall) {
        for (i=0;i&lt;=global.wallamount;i++)
        {
            var instancefind = instance_find(obj_wall,i);
            ini_write_real("wallx",string(i),instancefind.x);
            ini_write_real("wally",string(i),instancefind.y);
            ini_write_real("wallbuilt",string(i),instancefind.built);
            //ini_write_real("wallres",string(i),instancefind.retype);
            //ini_write_real("wallresquant",string(i),instancefind.requant);
        }
    }
    ini_close();
}



if keyboard_check_pressed(ord("L")) &amp;&amp; keyboard_check(vk_lcontrol) {
    var loadlocation = get_open_filename(".sav", "");
    if (file_exists(loadlocation))
    {
        ini_open(loadlocation);
        
        var n = 0;
        while ini_key_exists("workerx",string(n)) {
            var xx = ini_read_real("workerx",string(n),0);
            var yy = ini_read_real("workery",string(n),0);
            var wworkertype = ini_read_real("workertype",string(n),0);
            var instanceload = instance_create(xx,yy,obj_character);
            instanceload.workertype = wworkertype;
            n = n + 1;
        }
    
    if (file_exists(loadlocation))
    {
        ini_open(loadlocation);
        
        var n = 0;
        while ini_key_exists("wallx",string(n)) {
            var xx = ini_read_real("wallx",string(n),0);
            var yy = ini_read_real("wally",string(n),0);
            var wwallbuilt = ini_read_real("wallbuilt",string(n),0);
            //var rretype = ini_read_real("wallres",string(n),0);
            //var rrequant = ini_read_real("wallresquant",string(n),1);
            var instanceload = instance_create(xx,yy,obj_wall);
            instanceload.built = wwallbuilt;
            //instanceload.retype = rretype;
            //instanceload.requant = rrequant;
            if instanceload.built == false {
                instanceload.jobid = instanceload.id
                ds_list_add(idlist,instanceload.id);
                ds_list_add(joblist,0);
                ds_list_add(typelist,0);
                ds_list_add(actionlist,0);
                ds_list_add(progresslist,0);
            }
            n = n + 1;
        }
    }
    } else {
        show_message("Failed to load save: file doesn't exist")
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
